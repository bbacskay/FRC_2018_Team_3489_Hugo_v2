// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3489.FEMAv2.commands;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.command.CommandGroup;

import org.usfirst.frc3489.FEMAv2.Robot;
import org.usfirst.frc3489.FEMAv2.subsystems.*;

/**
 *
 */
public class autoChooser extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public autoChooser() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
    	String pos = Robot.autonomousSelection.getSwitch();
    	String gameData;
		gameData = DriverStation.getInstance().getGameSpecificMessage();
    	if (pos == "left") {
    		if(gameData.charAt(1) == 'L') {
    			//Left Scale Auto
    			addSequential(new leftAutoScale());
    		} else {
    			if (gameData.charAt(0) == 'L') {
    				//Left Switch Auto
    				addSequential(new leftAutoSwitch());
    			} else {
    				//Left Other Auto
    				addSequential(new leftRightAutoStraight());
    			}
    		}
    	}
    	else if (pos == "right") {
    		if(gameData.charAt(0) == 'R') {
    			
    			//Right Switch Auto
    			addSequential(new rightAutoSwitch());
    		} else {
    			if (gameData.charAt(1) == 'R') {
    				//Right Scale Auto
    				addSequential(new rightAutoScale());
    			} else {
    				//Right Other Auto
    				addSequential(new leftRightAutoStraight());
    			}
    		}
    	} else {
    		if(gameData.charAt(0) == 'R') {
    			//Center Right Auto
    			addSequential(new centerAutoSwitchRight());
    		} else {
    			//Center Left Auto
    			addSequential(new centerAutoSwitchLeft());
    		}
    	}
    }
}
