// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3489.FEMAv2.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3489.FEMAv2.Robot;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.PIDOutput;

/**
 *
 */
public class cmdDriveTurn extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_angle;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_targetHeading;
    private double heading;
    private double speed;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public cmdDriveTurn(double angle) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_angle = angle;
        speed = 0.50;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveSystem);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	//m_targetHeading = Robot.driveSystem.getHeading() + m_angle;
    	m_targetHeading = m_angle;
    	/*
    	if (m_targetHeading < 0) {
    		m_targetHeading += 360;
    		//speed *= -1;
    	} else if (m_targetHeading > 360) {
    		m_targetHeading -= 360;
    		//speed *= -1;
    	}
    	*/
    	
    	Robot.driveSystem.turnToAngle(m_targetHeading);
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	heading = Robot.driveSystem.getHeading();

    	System.out.println("Heading: " + heading + "  targetHeading: " + m_targetHeading);	
    	
/*    	
    	if (heading > m_targetHeading) {
			Robot.driveSystem.move(-speed, speed);
		} else if (heading < m_targetHeading) {
			Robot.driveSystem.move(speed, -speed);
		}
*/
    }

    	
    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        //return (Math.abs(heading - m_targetHeading) <= 0.25);
    	return Robot.driveSystem.getPidOk();
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.driveSystem.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	Robot.driveSystem.stop();	
    }
}
