// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3489.FEMAv2.subsystems;

import org.usfirst.frc3489.FEMAv2.RobotMap;
import org.usfirst.frc3489.FEMAv2.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Solenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Gripper extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Solenoid gripper60PSI = RobotMap.gripperGripper60PSI;
    private final Solenoid gripper20PSI = RobotMap.gripperGripper20PSI;
    private final DigitalInput autoGripCube = RobotMap.gripperAutoGripCube;
    private final WPI_TalonSRX motorRightIntake = RobotMap.gripperMotorRightIntake;
    private final WPI_TalonSRX motorLeftIntake = RobotMap.gripperMotorLeftIntake;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    
    /**
     * Closes the gripper and grips the cube with full pressure (60 Psi)
     */
    public void grabCube() {
    	gripper60Psi.set(true);
    	gripper20Psi.set(false);
    }
    
    /**
     * Opens the cube gripper and releases cube
     */
    public void releaseCube() {
    	gripper60Psi.set(false);
    	gripper20Psi.set(true);
    }
    
    public void grippermotors(double speed) {
    	double inputFactor = 1;
    	double motorPower;
    	
    	motorPower = inputFactor * speed;
    	leftIntake.set(-motorPower);
    	rightIntake.set(motorPower);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

