// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3489.FEMAv2;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX drivebaseMotorFrontLeft;
    public static WPI_TalonSRX drivebaseMotorFrontRight;
    public static DifferentialDrive drivebaseDriveTrain;
    public static WPI_TalonSRX drivebaseMotorRearLeft;
    public static WPI_TalonSRX drivebaseMotorRearRight;
    public static DoubleSolenoid drivebaseRocketBoxShifter;
    public static Encoder drivebaseLeftEnc;
    public static Encoder drivebaseRightEnc;
    public static Solenoid gripperGripper60PSI;
    public static Solenoid gripperGripper20PSI;
    public static WPI_TalonSRX lifterTalonSRX6;
    public static WPI_TalonSRX lifterTalonSRX7;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivebaseMotorFrontLeft = new WPI_TalonSRX(1);
        
        
        drivebaseMotorFrontRight = new WPI_TalonSRX(2);
        
        
        drivebaseDriveTrain = new DifferentialDrive(drivebaseMotorFrontLeft, drivebaseMotorFrontRight);
        LiveWindow.addActuator("Drivebase", "Drive Train", drivebaseDriveTrain);
        drivebaseDriveTrain.setSafetyEnabled(true);
        drivebaseDriveTrain.setExpiration(0.1);
        drivebaseDriveTrain.setMaxOutput(1.0);

        drivebaseMotorRearLeft = new WPI_TalonSRX(3);
        
        
        drivebaseMotorRearRight = new WPI_TalonSRX(4);
        
        
        drivebaseRocketBoxShifter = new DoubleSolenoid(20, 4, 5);
        LiveWindow.addActuator("Drivebase", "Rocket Box Shifter", drivebaseRocketBoxShifter);
        
        drivebaseLeftEnc = new Encoder(4, 5, false, EncodingType.k2X);
        LiveWindow.addSensor("Drivebase", "Left Enc", drivebaseLeftEnc);
        drivebaseLeftEnc.setDistancePerPulse(1.0);
        drivebaseLeftEnc.setPIDSourceType(PIDSourceType.kRate);
        drivebaseRightEnc = new Encoder(6, 7, false, EncodingType.k2X);
        LiveWindow.addSensor("Drivebase", "Right Enc", drivebaseRightEnc);
        drivebaseRightEnc.setDistancePerPulse(1.0);
        drivebaseRightEnc.setPIDSourceType(PIDSourceType.kRate);
        gripperGripper60PSI = new Solenoid(20, 2);
        LiveWindow.addActuator("Gripper", "Gripper 60 PSI", gripperGripper60PSI);
        
        gripperGripper20PSI = new Solenoid(20, 3);
        LiveWindow.addActuator("Gripper", "Gripper 20 PSI", gripperGripper20PSI);
        
        lifterTalonSRX6 = new WPI_TalonSRX(6);
        
        
        lifterTalonSRX7 = new WPI_TalonSRX(7);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
